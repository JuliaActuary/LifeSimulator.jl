name: bench
on:
  workflow_dispatch:
  push:
jobs:
  bench-R:
    runs-on: ubuntu-latest
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
    defaults:
      run:
        working-directory: R
    steps:
      - uses: actions/checkout@v3 #now we need to install R
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.2'
      # we need to manually cache the packages
      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()
      - run: Rscript -e 'source("exposures.R")'
  bench-Julia:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Julia
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.7'
      - run: julia -e 'using Pkg; Pkg.activate("."); Pkg.instantiate()'
      - run: julia mortality.jl
  bench-Python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Python
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - run: pip install -r requirements.txt
      # cache the python pip installed packages
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: python mortality.py